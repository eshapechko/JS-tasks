// Задача
// Ваша задача — написать такую ​​кодировку длин серий. Для заданной строки верните список (или массив) пар (или массивов) [ (i 1 , s 1 ), (i 2 , s 2 ), …, (in , s n ) ], таких, что можно реконструировать исходную строку, реплицируя символ s x i x раз и объединяя все эти строки. Ваша длина кодирования должна быть минимальной, т.е. для всех i значения s i и s i+1 должны различаться.

// Примеры
// Как говорится в статье, RLE — это очень простая форма сжатия данных. Он подходит только для прогонов данных, как видно из следующего примера:

// runLengthEncoding("hello world!")
//  //=>      [[1,'h'], [1,'e'], [2,'l'], [1,'o'], [1,' '], [1,'w'], [1,'o'], [1,'r'], [1,'l'], [1,'d'], [1,'!']]
// Очень эффективно, если одно и то же значение данных встречается во многих последовательных элементах данных:

// runLengthEncoding("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbb")
//  // => [[34,'a'], [3,'b']]

let runLengthEncoding = function (str) {
  const arr = [];
  let value = 1;
  for (let i = 0; i < str.length; i++) {
    if (str[i] !== str[i + 1]) {
      arr.push([value, str[i]]);
      value = 1;
    } else {
      value++;
    }
  }
  return arr;
};

console.log(runLengthEncoding("hello world!"));
